version: '3'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  dnginx:
    container_name: dnginx
    image: bunkerity/bunkerized-nginx
    ports:
      - 80
      - 443
    volumes:
      - ./nginx/dwww:/www:ro
      - ./nginx/conf:/server-confs:ro
    environment:
      - SERVER_NAME=metrica.local grafana # replace with your domains
      - SERVE_FILES=no
      - DISABLE_DEFAULT_SERVER=yes
      - REDIRECT_HTTP_TO_HTTPS=no
      - AUTO_LETS_ENCRYPT=no
    restart: always

  mariadb:
      build:
        context: ./mysql
        dockerfile: Dockerfile
      container_name: dmysql
      ports: 
        - 3306
        - 80
      depends_on:
        - dnginx
      volumes:
        - ./mysql:/var/lib/mysql:ro
        - ./mysql/certificate:/etc/letsencrypt
      environment:
        - USER_NAME=${DB_USER_NAME}
        - USER_PASSWORD=${DB_USER_PASSWORD}
        #- AUTO_LETS_ENCRYPT=yes
      restart: always
 
  prometheus:
    image: prom/prometheus:v2.22.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090
    expose:
      - 9090
    
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093
    expose:
      - 9093

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports: 
      - 9100
    expose:
      - 9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.38.3
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    ports:
      - 8080
    expose:
      - 8080

  grafana:
    image: grafana/grafana:7.3.2
    container_name: grafana
    user: "472"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    restart: unless-stopped
    ports:
      - 3000
    expose:
      - 3000

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${CADDY_ADMIN_USER}
      - ADMIN_PASSWORD=${CADDY_ADMIN_PASSWORD}
    restart: unless-stopped